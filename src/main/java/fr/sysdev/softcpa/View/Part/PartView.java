/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.sysdev.softcpa.View.Part;


import fr.sysdev.softcpa.constants.Constants;
import fr.sysdev.softcpa.entity.Part;
import fr.sysdev.softcpa.entity.Provider;
import fr.sysdev.softcpa.utils.predicates.PartsPredicates;
import java.awt.Color;
import java.awt.HeadlessException;

import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Optional;
import java.util.Set;

import javax.swing.JButton;
import javax.swing.JFileChooser;

import javax.swing.JTextField;


import javax.swing.event.RowSorterEvent;

import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import lombok.extern.slf4j.Slf4j;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/**
 *
 * @author COPCGRE
 */
@Slf4j
@Component
@Scope
public class PartView extends javax.swing.JInternalFrame {

//    @Autowired
//    private PartController pieceController;
    private List<Part> parts;
    private List<Part> allParts;
    List<Provider> providers;
    private Part part;

    private String csvFile;
    private TableRowSorter<TableModel> sorter;

 

    public PartView(List<Part> parts, List<Provider> providers) {
        part = new Part();
        this.parts = new ArrayList<>(parts);
        this.allParts = parts;
        this.providers = new ArrayList<>(providers);
       
        initComponents();
        
        prepareForm();
        
        
        resetInterface();
        
        
    }

    public List<Part> getParts() {
        return parts;
    }

    public void setParts(List<Part> parts) {
        this.parts = parts;
    }

    /**
     * Creates new form PieceViews
     */

    public PartView() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton_Cancel = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();
        jButton_Remove = new javax.swing.JButton();
        jButton_Add = new javax.swing.JButton();
        jButton_Invoicing = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Part_Designation = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Part = new javax.swing.JTable();
        jTextField_Part_SellingPrice = new javax.swing.JTextField();
        jTextField_Part_Brand = new javax.swing.JTextField();
        jTextField_Part_Quantity = new javax.swing.JTextField();
        jTextField_Part_Search = new javax.swing.JTextField();
        jTextField_Part_PurchasingPrice = new javax.swing.JTextField();
        jTextField_Part_EanCode = new javax.swing.JTextField();
        jTextField_Part_Id = new javax.swing.JTextField();
        jTextField_Part_Reference = new javax.swing.JTextField();
        jLabel_Part_Brand = new javax.swing.JLabel();
        jLabel_Part_SellingPrice = new javax.swing.JLabel();
        jLabel_Part_Designation = new javax.swing.JLabel();
        jLabel_Part_Quantity = new javax.swing.JLabel();
        jLabel_Part_EanCode = new javax.swing.JLabel();
        jLabel_Part_Id = new javax.swing.JLabel();
        jLabel_Part_Search = new javax.swing.JLabel();
        jLabel_Part_PurchasingPrice = new javax.swing.JLabel();
        jLabel_Part_Reference = new javax.swing.JLabel();
        jLabel_Part_Provider = new javax.swing.JLabel();
        jComboBox_Part_Provider = new javax.swing.JComboBox<>();
        jButton_Part_Open_Csv = new javax.swing.JButton();
        jTextField_Part_CsvFilePath = new javax.swing.JTextField();
        jButton_Part_Import = new javax.swing.JButton();
        jLabel_Part_Count = new javax.swing.JLabel();
        jButton_Refresh = new javax.swing.JButton();
        jComboBox_Part_ProviderToImport = new javax.swing.JComboBox<>();

        jTextField5.setText("jTextField5");

        jTextField6.setText("jTextField6");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion Stock");
        setFocusTraversalPolicyProvider(true);
        setPreferredSize(new java.awt.Dimension(1160, 527));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jButton_Cancel.setText("Cancel");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jButton_Update.setText("Modify");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });

        jButton_Remove.setText("Remove");
        jButton_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RemoveActionPerformed(evt);
            }
        });

        jButton_Add.setText("Add");
        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });

        jButton_Invoicing.setText("Invoicing");
        jButton_Invoicing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InvoicingActionPerformed(evt);
            }
        });

        jTextArea_Part_Designation.setColumns(20);
        jTextArea_Part_Designation.setRows(5);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.designation}"), jTextArea_Part_Designation, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextArea_Part_Designation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea_Part_DesignationKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea_Part_Designation);

        jTable_Part.setAutoCreateRowSorter(true);
        jTable_Part.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${parts}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable_Part);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${eanCode}"));
        columnBinding.setColumnName("Ean Code");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${reference}"));
        columnBinding.setColumnName("Reference");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${designation}"));
        columnBinding.setColumnName("Designation");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${brand}"));
        columnBinding.setColumnName("Brand");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${provider}"));
        columnBinding.setColumnName("Provider");
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.Provider.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${purchasingPrice}"));
        columnBinding.setColumnName("Purchasing Price");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantity}"));
        columnBinding.setColumnName("Quantity");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sellingPrice}"));
        columnBinding.setColumnName("Selling Price");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTable_Part.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_PartMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Part);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.sellingPrice}"), jTextField_Part_SellingPrice, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.brand}"), jTextField_Part_Brand, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField_Part_Quantity.setNextFocusableComponent(jTextArea_Part_Designation);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.quantity}"), jTextField_Part_Quantity, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField_Part_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_Part_SearchKeyReleased(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.purchasingPrice}"), jTextField_Part_PurchasingPrice, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField_Part_EanCode.setNextFocusableComponent(jLabel_Part_Quantity);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.eanCode}"), jTextField_Part_EanCode, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField_Part_EanCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Part_EanCodeActionPerformed(evt);
            }
        });

        jTextField_Part_Id.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), jTextField_Part_Id, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField_Part_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Part_IdActionPerformed(evt);
            }
        });

        jTextField_Part_Reference.setNextFocusableComponent(jLabel_Part_Quantity);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_Part, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.reference}"), jTextField_Part_Reference, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField_Part_Reference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Part_ReferenceActionPerformed(evt);
            }
        });

        jLabel_Part_Brand.setText("jLabel1");

        jLabel_Part_SellingPrice.setText("jLabel1");

        jLabel_Part_Designation.setText("jLabel1");

        jLabel_Part_Quantity.setText("jLabel1");

        jLabel_Part_EanCode.setText("jLabel1");

        jLabel_Part_Id.setText("jLabel1");

        jLabel_Part_Search.setText("jLabel1");

        jLabel_Part_PurchasingPrice.setText("jLabel1");

        jLabel_Part_Reference.setText("jLabel1");

        jLabel_Part_Provider.setText("jLabel1");

        jButton_Part_Open_Csv.setText("open csv");
        jButton_Part_Open_Csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Part_Open_CsvActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${csvFile}"), jTextField_Part_CsvFilePath, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jButton_Part_Import.setText("Import");
        jButton_Part_Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Part_ImportActionPerformed(evt);
            }
        });

        jLabel_Part_Count.setText("jLabel1");

        jButton_Refresh.setText("jButton1");
        jButton_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_Part_Id)
                            .addComponent(jLabel_Part_EanCode)
                            .addComponent(jLabel_Part_Reference)
                            .addComponent(jLabel_Part_Quantity)
                            .addComponent(jLabel_Part_Designation)
                            .addComponent(jLabel_Part_Brand)
                            .addComponent(jLabel_Part_SellingPrice)
                            .addComponent(jLabel_Part_PurchasingPrice))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField_Part_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_Part_Provider)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox_Part_Provider, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField_Part_EanCode, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Part_Reference, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Part_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Part_Brand, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Part_SellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Part_PurchasingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel_Part_Search)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_Part_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_Part_Count))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jButton_Invoicing, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(448, 448, 448)
                        .addComponent(jButton_Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(485, 485, 485)
                        .addComponent(jTextField_Part_CsvFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_Part_Import, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Part_Open_Csv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_Part_ProviderToImport, 0, 100, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton_Refresh)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_Part_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_Part_Id)
                        .addComponent(jLabel_Part_Provider)
                        .addComponent(jComboBox_Part_Provider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_Part_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_Part_Search)
                        .addComponent(jLabel_Part_Count)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Invoicing))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Part_EanCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_EanCode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Part_Reference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_Reference))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Part_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_Quantity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_Designation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Part_Brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_Brand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Part_SellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_SellingPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Part_PurchasingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Part_PurchasingPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Update)
                            .addComponent(jButton_Remove))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Cancel)
                            .addComponent(jButton_Add)
                            .addComponent(jButton_Part_Open_Csv))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_Part_ProviderToImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Part_CsvFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Part_Import)
                .addGap(20, 20, 20))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_Part_EanCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Part_EanCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Part_EanCodeActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        //pieceController.getView().setTitle("toDel");
        //System.out.println(""+pieceController.getView().getTitle());
    }//GEN-LAST:event_formInternalFrameClosed

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
     
        
        
    }//GEN-LAST:event_jButton_UpdateActionPerformed

    private void jTextField_Part_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Part_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Part_IdActionPerformed

    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddActionPerformed
        //updateInterface();  
        resetInterface();
    }//GEN-LAST:event_jButton_AddActionPerformed

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
        resetInterface();
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jTextArea_Part_DesignationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea_Part_DesignationKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            System.out.println(evt.getModifiers());
            if (evt.getModifiers() > 0) {
                jTextField_Part_Quantity.requestFocus();
            } else {
                jTextField_Part_Brand.requestFocus();
            }
            evt.consume();
        }
    }//GEN-LAST:event_jTextArea_Part_DesignationKeyPressed

    private void jTextField_Part_ReferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Part_ReferenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Part_ReferenceActionPerformed

    private void jButton_Part_Open_CsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Part_Open_CsvActionPerformed
        getCsvFilePath();
    }//GEN-LAST:event_jButton_Part_Open_CsvActionPerformed

    private void jButton_Part_ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Part_ImportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_Part_ImportActionPerformed

    private void jTable_PartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_PartMouseClicked
        getPartFromSelectedTableRow();
        jComboBox_Part_Provider.setSelectedItem(part.getProvider().getName());
        jTable_Part.setSelectionBackground(Color.blue);
        jTable_Part.setSelectionForeground(Color.white);
        if (evt.getClickCount() == 2) {

        } else {
            updateInterface();
        }
    }//GEN-LAST:event_jTable_PartMouseClicked

    private void jTextField_Part_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_Part_SearchKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
        {   parts.clear();
            parts.addAll(allParts);
        }
        search();
    }//GEN-LAST:event_jTextField_Part_SearchKeyReleased

    private void jButton_InvoicingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InvoicingActionPerformed


    }//GEN-LAST:event_jButton_InvoicingActionPerformed

    private void jButton_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RemoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_RemoveActionPerformed

    private void jButton_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RefreshActionPerformed
   bindingPartTable();
    }//GEN-LAST:event_jButton_RefreshActionPerformed

    public void getCsvFilePath() throws HeadlessException {
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle(Constants.Labels.SELECT_A_FILE);
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(Constants.Labels.CSV_FILE, "csv");
        jfc.addChoosableFileFilter(filter);

        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            System.out.println(jfc.getSelectedFile().getPath());
            this.setCsvFile(jfc.getSelectedFile().getPath());
            jTextField_Part_CsvFilePath.setText(csvFile);
        } else {
            System.out.println("No Selection ");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add;
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_Invoicing;
    private javax.swing.JButton jButton_Part_Import;
    private javax.swing.JButton jButton_Part_Open_Csv;
    private javax.swing.JButton jButton_Refresh;
    private javax.swing.JButton jButton_Remove;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JComboBox<String> jComboBox_Part_Provider;
    private javax.swing.JComboBox<String> jComboBox_Part_ProviderToImport;
    private javax.swing.JLabel jLabel_Part_Brand;
    private javax.swing.JLabel jLabel_Part_Count;
    private javax.swing.JLabel jLabel_Part_Designation;
    private javax.swing.JLabel jLabel_Part_EanCode;
    private javax.swing.JLabel jLabel_Part_Id;
    private javax.swing.JLabel jLabel_Part_Provider;
    private javax.swing.JLabel jLabel_Part_PurchasingPrice;
    private javax.swing.JLabel jLabel_Part_Quantity;
    private javax.swing.JLabel jLabel_Part_Reference;
    private javax.swing.JLabel jLabel_Part_Search;
    private javax.swing.JLabel jLabel_Part_SellingPrice;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Part;
    private javax.swing.JTextArea jTextArea_Part_Designation;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField_Part_Brand;
    private javax.swing.JTextField jTextField_Part_CsvFilePath;
    private javax.swing.JTextField jTextField_Part_EanCode;
    private javax.swing.JTextField jTextField_Part_Id;
    private javax.swing.JTextField jTextField_Part_PurchasingPrice;
    private javax.swing.JTextField jTextField_Part_Quantity;
    private javax.swing.JTextField jTextField_Part_Reference;
    private javax.swing.JTextField jTextField_Part_Search;
    private javax.swing.JTextField jTextField_Part_SellingPrice;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        jComboBox_Part_Provider.removeAllItems();
        jComboBox_Part_ProviderToImport.removeAllItems();
        providers.forEach(p -> jComboBox_Part_Provider.addItem(p.getName()));
        providers.forEach(p -> jComboBox_Part_ProviderToImport.addItem(p.getName()));
        
        jLabel_Part_Count.setText(parts.size()+ " Parts");
        
        jLabel_Part_Id.setText(Constants.Labels.PART_ID);
        jLabel_Part_EanCode.setText(Constants.Labels.EAN_CODE);
        jLabel_Part_Reference.setText(Constants.Labels.REF);
        jLabel_Part_Designation.setText(Constants.Labels.DESIGNATION);
        jLabel_Part_Brand.setText(Constants.Labels.BRAND);

        jLabel_Part_PurchasingPrice.setText(Constants.Labels.PUR_PRICE);
        jLabel_Part_SellingPrice.setText(Constants.Labels.SELLING_PRICE);
        jLabel_Part_Quantity.setText(Constants.Labels.QUANTITY);

        jLabel_Part_Search.setText(Constants.Labels.SEARCH);
        jLabel_Part_Provider.setText(Constants.Labels.PROVIDER);
        jButton_Add.setText(Constants.Labels.ADD_BTN);
        jButton_Remove.setText(Constants.Labels.REMOVE_BTN);
        jButton_Update.setText(Constants.Labels.UPDATE_BTN);
        
        bindingPartTable();
        jTable_Part.getTableHeader().addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int col = jTable_Part.columnAtPoint(e.getPoint());
            String name = jTable_Part.getColumnName(col);
            
            System.out.println("Column index selected " + col + " " + name);
    }
});
        
        
    }

    public Part getPart() {
        return part;
    }

    public void setPart(Part part) {
        this.part = part;
    }

    public JButton getRemoveBtn() {
        return jButton_Remove;
    }

    public JButton getAddBtn() {
        return jButton_Add;
    }

    public JButton getUpdateBtn() {
        return jButton_Update;
    }

    public JButton getInvoicingBtn() {
        return jButton_Invoicing;
    }

    public JButton getImportBtn() {
        return jButton_Part_Import;
    }

    public JTextField getSearchJTF() {

        return jTextField_Part_Search;
    }

    public void removePart() {


        getPartFromSelectedTableRow();
        int indexInAllParts = allParts.indexOf(findPartById(parts,part.getId()));
        int indexInParts = parts.indexOf(findPartById(parts,part.getId()));
        allParts.remove(indexInAllParts);
        parts.remove(indexInParts);
          bindingPartTable();
          resetInterface();
        
    }

    public void addPart(Long key) {
        jTextField_Part_Id.setText(key.toString());
        setPartFromForm();
        parts.add(part);
        allParts.add(part);
        bindingPartTable();

        resetInterface();
    }

    public void updatePart() {
        int row = jTable_Part.getSelectedRow();
        int rowt = jTable_Part.getRowSorter().convertRowIndexToModel(row);
        getPartFromSelectedTableRow();
        int indexInAllParts = allParts.indexOf(findPartById(parts,part.getId()));
        bindingPartTable();
        jTable_Part.setRowSelectionInterval(rowt,rowt);
        getPartFromSelectedTableRow();
        int indexInParts = parts.indexOf(findPartById(parts,part.getId()));
        allParts.set(indexInAllParts, part);
        parts.set(indexInParts, part);
    }

    public void getPartsToInvoice() {

    }

    private void bindingPartTable() {
        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${parts}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable_Part);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName(Constants.Labels.PART_ID);
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${eanCode}"));
        columnBinding.setColumnName(Constants.Labels.EAN_CODE);
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${reference}"));
        columnBinding.setColumnName(Constants.Labels.REF);
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${designation}"));
        columnBinding.setColumnName(Constants.Labels.DESIGNATION);
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${brand}"));
        columnBinding.setColumnName(Constants.Labels.BRAND);
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${provider}"));
        columnBinding.setColumnName(Constants.Labels.PROVIDER);
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.Provider.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${purchasingPrice}"));
        columnBinding.setColumnName(Constants.Labels.PUR_PRICE);
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantity}"));
        columnBinding.setColumnName(Constants.Labels.QUANTITY);
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sellingPrice}"));
        columnBinding.setColumnName(Constants.Labels.SELLING_PRICE);
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        TableColumnModel cm = jTable_Part.getColumnModel();
        cm.getColumn(0).setPreferredWidth(25);
        cm.getColumn(1).setPreferredWidth(50);
        cm.getColumn(2).setPreferredWidth(50);
        cm.getColumn(3).setPreferredWidth(250);
        cm.getColumn(4).setPreferredWidth(80);
        cm.getColumn(5).setPreferredWidth(80);
        cm.getColumn(6).setPreferredWidth(50);
        cm.getColumn(7).setPreferredWidth(50);
        cm.getColumn(8).setPreferredWidth(50);
        cm.getColumn(7).setCellRenderer(new StockCellRender());
        cm.getColumn(5).setCellRenderer(new ProviderCellRender());

         //jTable_Part.setAutoCreateRowSorter(true);
         
         
        TableModel model = jTable_Part.getModel();
        sorter = new TableRowSorter<>(model);
        
        sorter.addRowSorterListener((RowSorterEvent evt) -> {
            parts = removingDuplicatesAndSortPartList(parts);
            
           // bindingPartTable();
            System.out.println(LocalDateTime.now());

        });
        jTable_Part.setRowSorter(sorter);

    }

    private void resetInterface() {

        searchInterface();

        jTextField_Part_Search.setText("");
        displayPartsCount();
        jButton_Add.setVisible(true);
        jButton_Cancel.setVisible(true);
        jButton_Remove.setVisible(false);
        jButton_Update.setVisible(false);
    }

    public void displayPartsCount() {
        if(parts.size()>0)
            if(parts.size() == 1)
            jLabel_Part_Count.setText(Constants.Labels.ONE_PART);
            else{jLabel_Part_Count.setText(parts.size()+" "+Constants.Labels.PARTS);}
        else{jLabel_Part_Count.setText("");}
    }

    private void searchInterface() {
        jTable_Part.clearSelection();
        jTextField_Part_Id.setText("");
        jTextField_Part_EanCode.setText("");
        jTextField_Part_Reference.setText("");
        jTextArea_Part_Designation.setText("");
        jTextField_Part_Brand.setText("");
        jTextField_Part_PurchasingPrice.setText("");
        jTextField_Part_Quantity.setText("");
        jTextField_Part_SellingPrice.setText("");
        
        jButton_Add.setVisible(true);
        jButton_Remove.setVisible(false);
        jButton_Update.setVisible(false);
        jButton_Cancel.setVisible(true);
        jButton_Cancel.setText(Constants.Labels.CANCEL_BTN);

    }

    private void updateInterface() {

        jButton_Add.setVisible(false);
        jButton_Remove.setVisible(true);
        jButton_Update.setVisible(true);
        jButton_Cancel.setVisible(true);
        jButton_Cancel.setText(Constants.Labels.CREATE);
    }

    private void setPartFromForm() {
        part = new Part();
        part.setId(new Long(jTextField_Part_Id.getText()));
        part.setEanCode(jTextField_Part_EanCode.getText());
        part.setReference(jTextField_Part_Reference.getText());
        part.setDesignation(jTextArea_Part_Designation.getText());
        part.setBrand(jTextField_Part_Brand.getText());
        part.setPurchasingPrice(new Double(jTextField_Part_PurchasingPrice.getText()));
        part.setSellingPrice(new Double(jTextField_Part_SellingPrice.getText()));
        Provider provider = findProviderByName(providers, (String) jComboBox_Part_Provider.getSelectedItem());
        provider.addPart(part);
        part.setProvider(provider);
       
        

    }

    public String getCsvFile() {
        return csvFile;
    }

    public void setCsvFile(String csvFile) {
        this.csvFile = csvFile;
    }

    private Part getPartFromSelectedTableRow() {
        part = new Part();
        int row = jTable_Part.getSelectedRow();
        int rowt = jTable_Part.getRowSorter().convertRowIndexToModel(row);
        Long id = (Long) (jTable_Part.getModel().getValueAt(rowt, 0));
        part.setId(id);
        String eancode = (String) (jTable_Part.getModel().getValueAt(rowt, 1));
        part.setEanCode(eancode);

        String reference = (String) (jTable_Part.getModel().getValueAt(rowt, 2));
        part.setReference(reference);
        String designation = (String) (jTable_Part.getModel().getValueAt(rowt, 3));
        part.setDesignation(designation);
        String brand = (String) (jTable_Part.getModel().getValueAt(rowt, 4));
        part.setBrand(brand);
        Provider provider = (Provider) (jTable_Part.getModel().getValueAt(rowt, 5));
        part.setProvider(provider);
        int quantity = (int) (jTable_Part.getModel().getValueAt(rowt, 7));
        part.setQuantity(quantity);
        Double sp = (Double) (jTable_Part.getModel().getValueAt(rowt, 8));
        part.setSellingPrice(sp);
        Double pp = (Double) (jTable_Part.getModel().getValueAt(rowt, 6));
        part.setPurchasingPrice(pp);

        return part;
    }

    private void search() {

        String s = jTextField_Part_Search.getText().toUpperCase();
        if (jTable_Part.getRowCount() != 0 && !"".equals(s)) {
            List<Part> filter = PartsPredicates.filterParts(parts, PartsPredicates.refOrEanOrDesignationOrBrandContains(s));
            parts.clear();
            parts.addAll (removingDuplicatesAndSortPartList(filter));
            
            
            updateInterface();
            bindingPartTable();
            if(parts.size()>0){
            jTable_Part.setRowSelectionInterval(0, 0);
            jTable_Part.setSelectionBackground(Color.blue);
            jTable_Part.setSelectionForeground(Color.red);
            getPartFromSelectedTableRow();
            }
            else{
            searchInterface();
            bindingPartTable();
            }

        } else {
            
            searchInterface();
            parts.clear();
            parts.addAll(allParts);
            bindingPartTable();
  
        }
        displayPartsCount() ;
    }

    public static List<Part> removingDuplicatesAndSortPartList(List<Part> ListeAvecDoublons) {
        Set set = new HashSet();
        set.addAll(ListeAvecDoublons);
        List<Part> res = new ArrayList(set);
        Collections.sort(res, (Part p2, Part p1) -> p2.getId().compareTo(p1.getId()));
        return res;
    }
    
   public Part findPartById(List <Part> partsList , Long id){
       Part  result = null;
    Optional<Part> partOptional = partsList.stream().filter((t) -> {
           return t.getId().equals(id)     ;
            }).findAny();
    if(partOptional.isPresent())
          result = partOptional.get();

    return result;
   }

    
    public Provider findProviderByName (List <Provider> providersList , String name){
       Provider  result = null;
    Optional<Provider> providerOptional = providersList.stream().filter((p) -> {
           return p.getName().equals(name)     ;
            }).findAny();
    if(providerOptional.isPresent())
          result = providerOptional.get();

    return result;
   }
   
   public JButton getRefreshBtn(){
    
    return jButton_Refresh;
    }
   
   public void loadParts(){
   allParts = parts;
   prepareForm();
   }

    public void setProviders(List<Provider> providers) {
        this.providers = providers;
    }

    public Provider getProviderToImport() {
        Provider provider = findProviderByName(providers, (String) jComboBox_Part_ProviderToImport.getSelectedItem());
        return provider;
    }
}
