/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.sysdev.softcpa.View.Client;

import fr.sysdev.softcpa.constants.FR.*;
import fr.sysdev.softcpa.entity.Address;
import fr.sysdev.softcpa.entity.Client;
import fr.sysdev.softcpa.entity.ClientStatusEnum;
import fr.sysdev.softcpa.entity.Company;
import fr.sysdev.softcpa.utils.LoggingBindingListener;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Objects;
import javax.swing.JButton;
import javax.swing.JOptionPane;

import javax.swing.RowFilter;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/**
 *
 * @author COPCGRE
 */
@Slf4j
@Component
@Scope
public class ClientView extends javax.swing.JInternalFrame {
//    @Autowired
//    ClientController clientController ;

    /**
     * Creates new form ClientView
     */
    public List<Client> clients;
    public Client client;

    private TableRowSorter<TableModel> sorterClient;
    private Client clientToInvoice;

    public ClientView() {
        client = new Client();
        initComponents();

    }

    public ClientView(List<Client> clients) {
        
        client = new Client();
        this.clients = new ArrayList<>(clients);
        initComponents();
        
        prepareForm();
        resetInterface();
        bindingGroup.addBindingListener(new LoggingBindingListener(jLabel_Error));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        idConvertor1 = new fr.sysdev.softcpa.utils.Converter.IdConvertor();
        nameValidator1 = new fr.sysdev.softcpa.utils.Validator.NameValidator();
        phoneNumberValidator1 = new fr.sysdev.softcpa.utils.Validator.PhoneNumberValidator();
        surnameValidator1 = new fr.sysdev.softcpa.utils.Validator.SurnameValidator();
        emailValidator1 = new fr.sysdev.softcpa.utils.Validator.EmailValidator();
        houseNumberValidator1 = new fr.sysdev.softcpa.utils.Validator.HouseNumberValidator();
        postalCodelValidator1 = new fr.sysdev.softcpa.utils.Validator.PostalCodelValidator();
        jTextField_Client_Surname = new javax.swing.JTextField();
        jTextField_Client_Name = new javax.swing.JTextField();
        jTextField_Client_Email = new javax.swing.JTextField();
        jTextField_Client_PhoneNumber = new javax.swing.JTextField();
        jTextField_Address_HouseNumber = new javax.swing.JTextField();
        jTextField_Address_Street = new javax.swing.JTextField();
        jTextField_Address_PostCode = new javax.swing.JTextField();
        jButton_Add = new javax.swing.JButton();
        jButton_Remove = new javax.swing.JButton();
        jButton_Cancel = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_client = new javax.swing.JTable();
        jTextField_Address_City = new javax.swing.JTextField();
        jLabel_Client_Name = new javax.swing.JLabel();
        jLabel_Client_Surname = new javax.swing.JLabel();
        jLabel_Client_PhoneNumber = new javax.swing.JLabel();
        jLabel_Client_Email = new javax.swing.JLabel();
        jLabel_Address_Street = new javax.swing.JLabel();
        jLabel_Address_HouseNumber = new javax.swing.JLabel();
        jLabel_Address_PostCode = new javax.swing.JLabel();
        jLabel_Address_City = new javax.swing.JLabel();
        jTextField_Client_Search = new javax.swing.JTextField();
        jLabel_Client_Search = new javax.swing.JLabel();
        jTextField_Client_Id = new javax.swing.JTextField();
        jLabel_Client_Id = new javax.swing.JLabel();
        jComboBox_Client_Status = new javax.swing.JComboBox<>();
        jLabel_Client_Status = new javax.swing.JLabel();
        jLabel_Error = new javax.swing.JLabel();
        jTextField_Client_CompanyIDNumber = new javax.swing.JTextField();
        jLabel_Client_CompanyID = new javax.swing.JLabel();
        jLabel_Client_CompanyName = new javax.swing.JLabel();
        jTextField_Client_CompanyName = new javax.swing.JTextField();
        jButton_Invoicing = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion des clients");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/010-group.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.surname}"), jTextField_Client_Surname, org.jdesktop.beansbinding.BeanProperty.create("text"), "Surname");
        binding.setValidator(surnameValidator1);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.name}"), jTextField_Client_Name, org.jdesktop.beansbinding.BeanProperty.create("text"), "Client Name");
        binding.setValidator(nameValidator1);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.email}"), jTextField_Client_Email, org.jdesktop.beansbinding.BeanProperty.create("text"), "Email");
        binding.setValidator(emailValidator1);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.phoneNumber}"), jTextField_Client_PhoneNumber, org.jdesktop.beansbinding.BeanProperty.create("text"), "Phone Number");
        binding.setValidator(phoneNumberValidator1);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.address.houseNumber}"), jTextField_Address_HouseNumber, org.jdesktop.beansbinding.BeanProperty.create("text"), "House Number");
        binding.setValidator(houseNumberValidator1);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.address.street}"), jTextField_Address_Street, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.address.postCode}"), jTextField_Address_PostCode, org.jdesktop.beansbinding.BeanProperty.create("text"), "Postal Code");
        binding.setValidator(postalCodelValidator1);
        bindingGroup.addBinding(binding);

        jButton_Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Icons16X16/011-add.png"))); // NOI18N
        jButton_Add.setText("Add");
        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });

        jButton_Remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Icons16X16/013-user-1.png"))); // NOI18N
        jButton_Remove.setText("Delete");
        jButton_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RemoveActionPerformed(evt);
            }
        });

        jButton_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Icons16X16/017-back.png"))); // NOI18N
        jButton_Cancel.setText("Cancel");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jButton_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Icons16X16/012-user.png"))); // NOI18N
        jButton_Update.setText("Modify");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });

        jTable_client.setAutoCreateRowSorter(true);
        jTable_client.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jTable_client.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable_client.setDoubleBuffered(true);
        jTable_client.setFocusable(false);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${clients}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable_client);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${surname}"));
        columnBinding.setColumnName("Surname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${phoneNumber}"));
        columnBinding.setColumnName("Phone Number");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${address}"));
        columnBinding.setColumnName("Address");
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.Address.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${clientStatus}"));
        columnBinding.setColumnName("Client Status");
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.ClientStatusEnum.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName("Company");
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.Company.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTable_client.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_clientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_client);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.address.city}"), jTextField_Address_City, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel_Client_Name.setText("jLabel1");

        jLabel_Client_Surname.setText("jLabel1");

        jLabel_Client_PhoneNumber.setText("jLabel1");

        jLabel_Client_Email.setText("jLabel1");

        jLabel_Address_Street.setText("jLabel1");

        jLabel_Address_HouseNumber.setText("jLabel1");

        jLabel_Address_PostCode.setText("jLabel1");

        jLabel_Address_City.setText("jLabel1");

        jTextField_Client_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_Client_SearchKeyReleased(evt);
            }
        });

        jLabel_Client_Search.setText("jLabel1");

        jTextField_Client_Id.setEnabled(false);
        jTextField_Client_Id.setFocusable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), jTextField_Client_Id, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel_Client_Id.setText("jLabel1");

        jComboBox_Client_Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "Professional", " ", " ", " " }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${client.clientStatus.name}"), jComboBox_Client_Status, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox_Client_Status.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_Client_StatusItemStateChanged(evt);
            }
        });

        jLabel_Client_Status.setText("jLabel1");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.company.cin}"), jTextField_Client_CompanyIDNumber, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel_Client_CompanyID.setText("jLabel1");

        jLabel_Client_CompanyName.setText("jLabel1");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable_client, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.company.name}"), jTextField_Client_CompanyName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jButton_Invoicing.setText("Invoicing");
        jButton_Invoicing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InvoicingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Client_Id, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_Status, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_Name, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_Surname, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_CompanyName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_Email, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_PhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Address_HouseNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Address_Street, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Address_PostCode, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Address_City, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Client_CompanyID, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_Client_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_Client_Status, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Client_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Client_Surname, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Client_CompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Client_Email, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Client_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Address_HouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Address_Street, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Address_PostCode, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Address_City, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Client_CompanyIDNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton_Cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_Remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel_Client_Search)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_Client_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(157, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_Invoicing, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Error, javax.swing.GroupLayout.PREFERRED_SIZE, 1088, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField_Address_City, jTextField_Address_HouseNumber, jTextField_Address_PostCode, jTextField_Address_Street, jTextField_Client_CompanyIDNumber, jTextField_Client_CompanyName, jTextField_Client_Email, jTextField_Client_Name, jTextField_Client_PhoneNumber, jTextField_Client_Surname});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton_Add, jButton_Cancel, jButton_Remove, jButton_Update});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Client_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Client_Id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Client_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Client_Search)
                    .addComponent(jComboBox_Client_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Client_Status))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_Invoicing))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Client_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Client_Name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Client_Surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Client_Surname, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Client_CompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Client_CompanyName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Client_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Client_Email))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Client_PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Client_PhoneNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Address_HouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Address_HouseNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Address_Street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Address_Street))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Address_PostCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Address_PostCode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Address_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Address_City))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Client_CompanyIDNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Client_CompanyID, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Remove)
                            .addComponent(jButton_Update))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Add)
                            .addComponent(jButton_Cancel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_Error, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
        //  JOptionPane.showMessageDialog(null, " upd View");
        //  updateClient();

    }//GEN-LAST:event_jButton_UpdateActionPerformed

    public void updateClient() throws NumberFormatException {
        int row = jTable_client.getSelectedRow();
        int rowt = jTable_client.getRowSorter().convertRowIndexToModel(row);
        setClientFromForm(new Long(jTextField_Client_Id.getText()));

        jTable_client.setRowSelectionInterval(rowt, rowt);
        jTable_client.setSelectionBackground(Color.blue);
        jTable_client.setSelectionForeground(Color.white);
        //client = getClientFromSelectedTableRow();
        bindingClientTable();
        selectClientRow(rowt);
        
        //client.setInvoices(new ArrayList<Invoice>());
        //clientToUpdate.setStatus(rowt);
        //setClient(clientToUpdate) ;
    }

    public void sortClientList() {

        Comparator<Client> sizeComparator;
        sizeComparator = Comparator.comparingLong((c) -> c.getId());
        Collections.sort(clients, sizeComparator);
    }
    private void jButton_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RemoveActionPerformed


    }//GEN-LAST:event_jButton_RemoveActionPerformed


    private void jTable_clientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_clientMouseClicked

        setClient(getClientFromSelectedTableRow());
        jComboBox_Client_Status.setSelectedItem(client.getClientStatus().toString());
        jTable_client.setSelectionBackground(Color.blue);
        jTable_client.setSelectionForeground(Color.white);
        
        if (evt.getClickCount() == 2) {

            String detailMessage = Constants.Labels.CLIENT_ID + " : " + client.getId() + "\n"
                    + Constants.Labels.NAME + " : " + client.getName() + "\n"
                    + Constants.Labels.SURNAME + " : " + client.getSurname() + "\n"
                    + Constants.Labels.EMAIL + " : " + client.getEmail() + "\n"
                    + Constants.Labels.PHONE_NUMBER + " : " + client.getPhoneNumber() + "\n"
                    + Constants.Labels.HOUSE_NUMBER + " : " + client.getAddress().getHouseNumber() + "\n"
                    + Constants.Labels.STREET + " : " + client.getAddress().getStreet() + "\n"
                    + Constants.Labels.POSTAL_CODE + " : " + client.getAddress().getPostCode() + "\n"
                    + Constants.Labels.CITY + " : " + client.getAddress().getCity() + "\n";
            String infoPro
                    = Constants.Labels.CLIENT_STATUS + " : " + client.getClientStatus() + "\n"
                    + Constants.Labels.COMPANY_NAME + " : " + client.getCompany().getName() + "\n"
                    + Constants.Labels.COMPANY_ID + " : " + client.getCompany().getCin() + "\n";

            if (client.getClientStatus() == ClientStatusEnum.PROFESSIONAL) {
                detailMessage = detailMessage + infoPro;
            }
            String[] options = {Constants.Labels.OK, Constants.Labels.INVOICING};

            int x = JOptionPane.showOptionDialog(null, detailMessage,
                    Constants.Messages.CLICK_A_BUTTON,
                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);

            if (x == 1) {
                clientToInvoice = client;
            }

        } else {
            updateInterface();
        }
    }//GEN-LAST:event_jTable_clientMouseClicked

    public void setClientFromForm(Long id) {
        Client c = new Client();
        Company company = new Company();
        company.setName(formatName(jTextField_Client_CompanyName.getText()));
        company.setCin(jTextField_Client_CompanyIDNumber.getText());

        Address address = new Address();
        address.setCity(formatCity(jTextField_Address_City.getText()));
        address.setHouseNumber(jTextField_Address_HouseNumber.getText());
        address.setPostCode(jTextField_Address_PostCode.getText());
        address.setStreet(jTextField_Address_Street.getText());

        String name = formatName(jTextField_Client_Name.getText());
        String surname = formatSurname(jTextField_Client_Surname.getText());
        String phone = jTextField_Client_PhoneNumber.getText();
        String email = jTextField_Client_Email.getText();

        
        String strStatus = (String) jComboBox_Client_Status.getSelectedItem();
        ClientStatusEnum status;

        if(strStatus.equals(ClientStatusEnum.INDIVIDUAL.getName()))
        {status = ClientStatusEnum.INDIVIDUAL;
        company.setName("");
        company.setCin("");
        }
        else 
            status = ClientStatusEnum.PROFESSIONAL;
          
        c.setId(id);
        c.setCompany(company);
        c.setAddress(address);
        c.setName(name);
        c.setSurname(surname);
        c.setPhoneNumber(phone);
        c.setEmail(email);
        c.setClientStatus(status);
        this.setClient(c);
        
    }


    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddActionPerformed


    }//GEN-LAST:event_jButton_AddActionPerformed

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
        jTable_client.clearSelection();
        resetInterface();
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jTextField_Client_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_Client_SearchKeyReleased
        search();
    }//GEN-LAST:event_jTextField_Client_SearchKeyReleased

    private void jComboBox_Client_StatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_Client_StatusItemStateChanged
        if (jComboBox_Client_Status.getSelectedIndex()!=-1  && jComboBox_Client_Status.getSelectedItem().equals(ClientStatusEnum.PROFESSIONAL.toString())) {
           showCompanyInfo();
        } else {
             hideCompanyInfo();
            
        }

    }//GEN-LAST:event_jComboBox_Client_StatusItemStateChanged

    private void jButton_InvoicingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InvoicingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_InvoicingActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        jTable_client.clearSelection();
        resetInterface();
        loadClients();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private fr.sysdev.softcpa.utils.Validator.EmailValidator emailValidator1;
    private fr.sysdev.softcpa.utils.Validator.HouseNumberValidator houseNumberValidator1;
    private fr.sysdev.softcpa.utils.Converter.IdConvertor idConvertor1;
    private javax.swing.JButton jButton_Add;
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_Invoicing;
    private javax.swing.JButton jButton_Remove;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JComboBox<String> jComboBox_Client_Status;
    private javax.swing.JLabel jLabel_Address_City;
    private javax.swing.JLabel jLabel_Address_HouseNumber;
    private javax.swing.JLabel jLabel_Address_PostCode;
    private javax.swing.JLabel jLabel_Address_Street;
    private javax.swing.JLabel jLabel_Client_CompanyID;
    private javax.swing.JLabel jLabel_Client_CompanyName;
    private javax.swing.JLabel jLabel_Client_Email;
    private javax.swing.JLabel jLabel_Client_Id;
    private javax.swing.JLabel jLabel_Client_Name;
    private javax.swing.JLabel jLabel_Client_PhoneNumber;
    private javax.swing.JLabel jLabel_Client_Search;
    private javax.swing.JLabel jLabel_Client_Status;
    private javax.swing.JLabel jLabel_Client_Surname;
    private javax.swing.JLabel jLabel_Error;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_client;
    private javax.swing.JTextField jTextField_Address_City;
    private javax.swing.JTextField jTextField_Address_HouseNumber;
    private javax.swing.JTextField jTextField_Address_PostCode;
    private javax.swing.JTextField jTextField_Address_Street;
    private javax.swing.JTextField jTextField_Client_CompanyIDNumber;
    private javax.swing.JTextField jTextField_Client_CompanyName;
    private javax.swing.JTextField jTextField_Client_Email;
    private javax.swing.JTextField jTextField_Client_Id;
    private javax.swing.JTextField jTextField_Client_Name;
    private javax.swing.JTextField jTextField_Client_PhoneNumber;
    private javax.swing.JTextField jTextField_Client_Search;
    private javax.swing.JTextField jTextField_Client_Surname;
    private fr.sysdev.softcpa.utils.Validator.NameValidator nameValidator1;
    private fr.sysdev.softcpa.utils.Validator.PhoneNumberValidator phoneNumberValidator1;
    private fr.sysdev.softcpa.utils.Validator.PostalCodelValidator postalCodelValidator1;
    private fr.sysdev.softcpa.utils.Validator.SurnameValidator surnameValidator1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public List<Client> getClients() {
        return clients;
    }

    public void setClients(List<Client> clients) {
        this.clients = clients;
    }

    private void bindingClientTable() {
        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${clients}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable_client);

        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_ID);
        columnBinding.setColumnClass(Long.class);

        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_NAME);
        columnBinding.setColumnClass(String.class);
        
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${surname}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_SURNAME);
        columnBinding.setColumnClass(String.class);
        
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_EMAIL);
        columnBinding.setColumnClass(String.class);
        
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${phoneNumber}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_PHONE_NUMBER);
        columnBinding.setColumnClass(String.class);
        
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${address}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_ADDRESS);
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.Address.class);


        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${clientStatus}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_STATUS);
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.ClientStatusEnum.class);


        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${company}"));
        columnBinding.setColumnName(Constants.Headers.CLIENT_COMPANY_NAME);
        columnBinding.setColumnClass(fr.sysdev.softcpa.entity.Company.class);

        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        TableColumnModel cm = jTable_client.getColumnModel();
        cm.getColumn(0).setPreferredWidth(20);
        cm.getColumn(1).setPreferredWidth(50);
        cm.getColumn(2).setPreferredWidth(50);
        cm.getColumn(3).setPreferredWidth(160);
        cm.getColumn(4).setPreferredWidth(50);
        cm.getColumn(5).setPreferredWidth(140);
        cm.getColumn(6).setPreferredWidth(40);
        cm.getColumn(6).setCellRenderer(new StatusCellRender());
        cm.getColumn(7).setCellRenderer(new CompanyCellRender());

    }

    public JButton getRemoveBtn() {
        return jButton_Remove;
    }

    public JButton getAddBtn() {
        return jButton_Add;
    }

    public JButton getUpdateBtn() {
        return jButton_Update;
    }

    public JButton getInvoicingBtn() {
        return jButton_Invoicing;
    }

    private void prepareForm() {
        
        this.setTitle(Constants.JFrameTitles.CLIENTS);
        bindingClientTable();

        this.sorterClient = new TableRowSorter<>(this.jTable_client.getModel());
        this.jTable_client.setRowSorter(sorterClient);

        jLabel_Client_Id.setText(Constants.Labels.CLIENT_ID);
        jLabel_Address_City.setText(Constants.Labels.CITY);
        jLabel_Address_HouseNumber.setText(Constants.Labels.HOUSE_NUMBER);
        jLabel_Address_PostCode.setText(Constants.Labels.POSTAL_CODE);
        jLabel_Client_Email.setText(Constants.Labels.EMAIL);
        jLabel_Client_Name.setText(Constants.Labels.NAME);
        jLabel_Client_PhoneNumber.setText(Constants.Labels.PHONE_NUMBER);
        jLabel_Client_Surname.setText(Constants.Labels.SURNAME);
        jLabel_Client_Search.setText(Constants.Labels.SEARCH);
        jLabel_Address_Street.setText(Constants.Labels.STREET);
        jLabel_Client_Status.setText(Constants.Labels.CLIENT_STATUS);
        jLabel_Client_CompanyName.setText(Constants.Labels.COMPANY_NAME);
        jLabel_Client_CompanyID.setText(Constants.Labels.COMPANY_ID);
        jButton_Add.setText(Constants.Labels.ADD_BTN);
        jButton_Remove.setText(Constants.Labels.REMOVE_BTN);
        jButton_Update.setText(Constants.Labels.UPDATE_BTN);
        
        
        jComboBox_Client_Status.removeAllItems();
        for (ClientStatusEnum s : ClientStatusEnum.values()) {
             jComboBox_Client_Status.addItem(s.toString());
        }

       
        
    }

    private void resetInterface() {

        searchInterface();
        jComboBox_Client_Status.setSelectedIndex(0);
        hideCompanyInfo();
        jLabel_Error.setText("");
        jTextField_Client_Search.setText("");

    }

    public void hideCompanyInfo() {
        jLabel_Client_CompanyName.setVisible(false);
        jLabel_Client_CompanyID.setVisible(false);
        jTextField_Client_CompanyIDNumber.setVisible(false);
        jTextField_Client_CompanyName.setVisible(false);
    }

    public void showCompanyInfo() {
        jLabel_Client_CompanyName.setVisible(true);
        jLabel_Client_CompanyID.setVisible(true);
        jTextField_Client_CompanyIDNumber.setVisible(true);
        jTextField_Client_CompanyName.setVisible(true);
    }

    private void searchInterface() {

        jTextField_Address_City.setText("");
        jTextField_Address_HouseNumber.setText("");
        jTextField_Address_PostCode.setText("");
        jTextField_Address_Street.setText("");
        jTextField_Client_Email.setText("");
        jTextField_Client_Name.setText("");
        jTextField_Client_PhoneNumber.setText("");
        jTextField_Client_Surname.setText("");
        jTextField_Client_Id.setText("");
        jTextField_Client_CompanyIDNumber.setText("");
        jTextField_Client_CompanyName.setText("");

        jButton_Add.setVisible(true);
        jButton_Remove.setVisible(false);
        jButton_Update.setVisible(false);
        jButton_Cancel.setVisible(true);
        jButton_Cancel.setText(Constants.Labels.CANCEL_BTN);

    }

    private void updateInterface() {

        jButton_Add.setVisible(false);
        jButton_Remove.setVisible(true);
        jButton_Update.setVisible(true);
        jButton_Cancel.setVisible(true);
        jButton_Cancel.setText(Constants.Labels.CREATE);
    }

    public Client getClient() {
        return this.client;
    }

    public void setClient(Client client) {
        this.client = client;
    }

    private void search() {

        rechercherParTouTLesCriters();
    }

    private void rechercherParTouTLesCriters() {
        String search = jTextField_Client_Search.getText().replaceAll("\\s+", " ").trim();
        updateFilter(search);
        if (jTable_client.getRowCount() != 0 && !search.equals("")) {
            jTable_client.setRowSelectionInterval(0, 0);
            jTable_client.setSelectionBackground(Color.blue);
            jTable_client.setSelectionForeground(Color.white);
            getClientFromSelectedTableRow();
            updateInterface();
        } else {
            searchInterface();
            jTable_client.clearSelection();
        }

    }

    private void updateFilter(String filterText) {
        filterText = "(?i)" + filterText;
        TableRowSorter sorter = (TableRowSorter) jTable_client.getRowSorter();

        if (filterText.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                RowFilter<Object, Object> rf = RowFilter.regexFilter(filterText, 0, 1, 2, 3, 4, 5);
                sorter.setRowFilter(rf);
            } catch (java.util.regex.PatternSyntaxException e) {
                sorter.setRowFilter(null);
            }
        }

    }

    private Client getClientFromSelectedTableRow() {

        Client c = new Client();
        int row = jTable_client.getSelectedRow();
        int rowt = jTable_client.getRowSorter().convertRowIndexToModel(row);

        Long id = (Long) (jTable_client.getModel().getValueAt(rowt, 0));

        String name = (String) (jTable_client.getModel().getValueAt(rowt, 1));
        String surname = (String) (jTable_client.getModel().getValueAt(rowt, 2));
        String email = (String) (jTable_client.getModel().getValueAt(rowt, 3));
        String phone = (String) (jTable_client.getModel().getValueAt(rowt, 4));

        Address address = (Address) (jTable_client.getModel().getValueAt(rowt, 5));
        ///////////////////
        address.setCity(formatCity(address.getCity()));
        ClientStatusEnum status = (ClientStatusEnum) (jTable_client.getModel().getValueAt(rowt, 6));

        
        
        
        Company company = (Company) (jTable_client.getModel().getValueAt(rowt, 7));

        c.setId(id);
        c.setAddress(address);
        c.setCompany(company);
        c.setName(name);
        c.setSurname(surname);
        c.setPhoneNumber(phone);
        c.setEmail(email);
        
       
        
        if (status.equals(ClientStatusEnum.INDIVIDUAL)) {
            c.setClientStatus(ClientStatusEnum.INDIVIDUAL);
            c.getCompany().setName("");
        } else {
            c.setClientStatus(ClientStatusEnum.PROFESSIONAL);
        }
        
        
      
        return c;

    }

    public void addClient(Long id) {

        setClientFromForm(id);
        clients.add(client);
        bindingClientTable();

        resetInterface();
    }

    public void removeClient() {
        int result;
        result = JOptionPane.showConfirmDialog(null, Constants.Messages.DELETE_CLIENT_ALERT,
                "alert", JOptionPane.OK_CANCEL_OPTION);
        if (result == 0) {
            client = getClientFromSelectedTableRow();
            clients.removeIf(c -> {
                return Objects.equals(c.getId(), client.getId());
            });

            bindingClientTable();

            resetInterface();
        }
    }

    private String formatName(String nom) {
        if (nom.length() != 0) {
            nom = nom.toUpperCase().replaceAll("\\s+", " ").trim();
        }
        return nom;
    }

    private String formatSurname(String prenom) {
        if (prenom.length() != 0) {
            prenom = (prenom.substring(0, 1).toUpperCase() + prenom.substring(1).toLowerCase()).replaceAll("\\s+", " ").trim();
        }
        return prenom;
    }

    private String formatCity(String city) {
        if (city.length() != 0) {

            city = city.substring(0, 1).toUpperCase() + city.substring(1).replaceAll("\\s+", " ").trim();
        }
        return city;
    }

    public Client getClientToInvoice() {
        return clientToInvoice;
    }

    public void setClientToInvoicing(Client clientToInvoice) {
        this.clientToInvoice = clientToInvoice;
    }

    public void loadClients() {
        int selectedRow = getClientRow();
        bindingClientTable();
        if( selectedRow>-1)
        selectClientRow(selectedRow);
    }

    private int getClientRow() {
        int rowt =-1;
        if(jTable_client.getSelectedRowCount()>0)
        {int row = jTable_client.getSelectedRow();
            rowt = jTable_client.getRowSorter().convertRowIndexToModel(row);
        }
        return rowt;
    }

    private void selectClientRow(int rowt) {
            if(rowt>-1){
            jTable_client.setRowSelectionInterval(rowt, rowt);
            jTable_client.setSelectionBackground(Color.blue);
            jTable_client.setSelectionForeground(Color.white);}
        
    }

    public void alertClientHasInvoices() {
        JOptionPane.showMessageDialog(this,Constants.Messages.CLIENT_HAS_INVOICES);
    }

}
